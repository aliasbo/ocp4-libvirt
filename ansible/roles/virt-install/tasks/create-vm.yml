---
#  tasks

- name: Publish kickstart template as new file to /tmp
  template:
    src: "{{ libvirt_kstemplate }}"
    dest: "{{ libvirt_ksfile }}"
  when: libvirt_location | length > 0
  notify:
    - remove kickstart

- name: Create virt-install command
  set_fact:
    virt_command: >
      virt-install
      {{ ' --connect ' + libvirt_connect }}
      {{ ' --name ' + inventory_hostname }}
      {{ ' --vcpus ' + libvirt_vcpus | string }}
      {{ ' --cpu ' + libvirt_cpu_model }}
      {{ ' --memory ' + libvirt_memory | string }}
      {{ ' --disk pool=' +  libvirt_disk_pool + ',size=' + libvirt_disk_size | string }}
      {{ ' --network ' }}
      {{ (libvirt_bridge != '') | ternary('bridge=' + libvirt_bridge, 'network=' + libvirt_net) + ',mac=' + ip_mac }}
      {{ ' --os-variant ' + libvirt_os_variant }}
      {{ ' --boot ' + libvirt_boot }}
      {{ (libvirt_graphics == 'vnc') | ternary('--graphics vnc,listen=0.0.0.0',libvirt_graphics) }}
      {{ ' --noautoconsole --wait=-1' }}
    virt_source: >
      {{ (libvirt_location != '') | ternary(' --location=' + libvirt_location,' --pxe')  }}
      {{ (libvirt_location != '') | ternary(' --initrd-inject=' + libvirt_ksfile,'')  }}
      {{ (libvirt_location != '') | ternary(' --extra-args="ks=file:/' + libvirt_ksfile | basename + ' net.ifnames=0 biosdevname=0"','') }}

- name: virt-install command
  debug:
    msg: "{{ virt_command + virt_source }}"

- name: Create new vm on KVM
  command: "{{ virt_command + virt_source }}"

#      {{ ' --graphics ' + (libvirt_graphics == 'vnc') | ternary('vnc,listen=0.0.0.0','none') }}
#      {{ ' --noautoconsole --wait=-1' }}